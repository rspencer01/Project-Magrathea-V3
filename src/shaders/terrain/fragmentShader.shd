#version 140

in vec4 gsPosition;
out vec4 FragColor;

layout(shared)uniform frameData
{
  mat4x4 transformationMatrix;
  vec4 cameraPos;
  mat4x4 projectionMatrix;  
};


layout(shared)uniform objectData
{
  mat4x4 objectMatrix;
};
uniform sampler2D heightmap;
uniform sampler2D colourTexture;
uniform sampler2D noiseTexture;

void main()
{
  vec3 normal = texture(heightmap,(gsPosition.xz)/8000).xyz;
  
  float fog = 0;
  if (length(cameraPos-gsPosition)>1000)
    fog = clamp((length(cameraPos-gsPosition)-1000)/3000,0,1);
  if (texture(heightmap,(gsPosition.xz)/8000).a<0.0005) FragColor= vec4(0,0,0.3,1);
  else if (texture(heightmap,(gsPosition.xz)/8000).a<0.0020)
  FragColor = vec4(vec3(200,183,104.0)/vec3(256),1);
  else if ((normal.y<0.4))
  {
  	FragColor = vec4(vec3(132,122,114)/256,1);
    normal += 0.3*texture(noiseTexture,gsPosition.xz/80).xyz;
    normal = normalize(normal);
  }
  else if (gsPosition.y>1000)
  	FragColor = vec4(vec3(1),1);
  else
    FragColor = vec4((vec3(0.3,0.8,0.3)*0.9+texture(noiseTexture,gsPosition.xz/8000).xyz*0.1),1);
    float light = 0.5+0.5*normal.y;
  FragColor = vec4(FragColor.xyz*light*(1-fog),1);
  FragColor.xyz = FragColor.xyz*(1-fog)+vec3(0.54,0.93,0.93)*fog;
}
